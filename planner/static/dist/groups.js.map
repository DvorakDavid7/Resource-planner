{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/groups.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;ACjFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,8BAA8B,kBAAkB;AAChD,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,kBAAkB;AAC/C,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,sBAAsB,IAAI,wBAAwB;;AAEnF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA,C","file":"groups.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/groups.js\");\n","\r\n// Data Parsers\r\nlet groupModel = JSON.parse(document.querySelector(\".dataholder\").dataset.groupmodel);\r\n\r\n// DOM Queries\r\nconst tableControll = document.querySelector(\"#groups-controll\");\r\nconst membersControll = document.querySelector(\"#members-controll\");\r\nconst myList = document.querySelector(\"#myList\");\r\n\r\n// Event Listenery\r\nwindow.addEventListener('load', TableControllGenereator(groupModel));\r\n\r\n\r\n// Functions\r\n\r\nfunction TableControllGenereator(groupModel) {\r\n    for (groupName of Object.keys(groupModel)) {\r\n        let tr = document.createElement(\"tr\");\r\n        let groupNameCell = document.createElement(\"td\");\r\n        let deleteButton = document.createElement(\"button\");\r\n        let showMembersButton = document.createElement(\"button\");\r\n\r\n        groupNameCell.innerHTML = groupName;\r\n\r\n        deleteButton.innerHTML = \"X\";\r\n        deleteButton.dataset.groupName = groupName;\r\n        deleteButton.addEventListener(\"click\", deleteGroup);\r\n\r\n        showMembersButton.innerHTML = \"Show Members\";\r\n        showMembersButton.dataset.groupName = groupName;\r\n        showMembersButton.addEventListener(\"click\", showMembers);\r\n\r\n        tr.appendChild(groupNameCell);\r\n        tr.appendChild(deleteButton);\r\n        tr.appendChild(showMembersButton);\r\n        tableControll.appendChild(tr)\r\n    }\r\n}\r\n\r\n\r\nasync function deleteGroup(e){\r\n    let groupName = e.srcElement.dataset.groupName;\r\n\r\n    const response = await fetch('/groups/delete_group', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\"data\": groupName}),\r\n    });\r\n    console.log(response);\r\n    location.reload();\r\n}\r\n\r\n\r\nasync function showMembers(e){\r\n    let groupName = e.srcElement.dataset.groupName;\r\n    const myNode = document.querySelector(\"#myList\");\r\n    const group_name = document.querySelector(\"#group-name\");\r\n\r\n    const response = await fetch('/groups/group_members', {\r\n        method: \"POST\",\r\n        body:JSON.stringify({\"data\": groupName})\r\n    });\r\n    const data = await response.json();\r\n\r\n    let names = data.data;\r\n    \r\n    myNode.innerHTML = '';\r\n    group_name.innerHTML = groupName;\r\n    for (let i = 0; i < names.length; i++){\r\n        let tr = document.createElement(\"tr\");\r\n        let groupNameCell = document.createElement(\"td\");\r\n        let deleteButton = document.createElement(\"button\");\r\n        \r\n        groupNameCell.innerHTML = names[i][0] + \" (\" + names[i][1] + \")\";\r\n        \r\n        deleteButton.innerHTML = \"X\";\r\n        deleteButton.dataset.workerId = names[i][2];\r\n        deleteButton.addEventListener(\"click\", deleteMember);\r\n        \r\n        tr.appendChild(groupNameCell);\r\n        tr.appendChild(deleteButton);\r\n        myList.appendChild(tr)\r\n    }\r\n\r\n    let input = document.createElement(\"input\");\r\n    let submitBtn = document.createElement(\"button\");\r\n    input.type = \"text\";\r\n    input.id = \"input-value\";\r\n    submitBtn.type = \"submit\";\r\n    submitBtn.innerHTML = \"Add New Member\";\r\n    membersControll.innerHTML = \"\";\r\n    membersControll.appendChild(input);\r\n    membersControll.appendChild(submitBtn);\r\n    membersControll.addEventListener(\"submit\", addMember);\r\n}\r\n\r\n\r\nasync function addMember(e) {\r\n    e.preventDefault();\r\n    const input = document.querySelector(\"#input-value\");\r\n    const groupId = document.querySelector(\"#group-name\").innerText;\r\n    const workerId = input.value;\r\n\r\n    const response = await fetch('/groups/add_member', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            \"data\": workerId,\r\n            \"group_Id\": groupId\r\n        })\r\n    });\r\n    const responseData = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n        alert(responseData.err);\r\n        return\r\n    }\r\n\r\n    let tr = document.createElement(\"tr\");\r\n    let groupNameCell = document.createElement(\"td\");\r\n    let deleteButton = document.createElement(\"button\");\r\n    groupNameCell.innerHTML = `${responseData.fullName} (${responseData.department})`;\r\n\r\n    deleteButton.innerHTML = \"X\";\r\n    deleteButton.dataset.workerId = responseData.workerId;\r\n    deleteButton.addEventListener(\"click\", deleteMember);\r\n    \r\n    tr.appendChild(groupNameCell);\r\n    tr.appendChild(deleteButton);\r\n    myList.appendChild(tr)\r\n    input.value = \"\"\r\n}\r\n\r\n\r\nasync function deleteMember(e) {\r\n    let workerId = e.srcElement.dataset.workerId;\r\n    const groupId = document.querySelector(\"#group-name\").innerText;\r\n\r\n    const response = await fetch('/groups/delete_member', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            \"data\": workerId,\r\n            \"group_Id\": groupId\r\n        })\r\n    });\r\n    const data = await response.json();\r\n\r\n    for (let i = 0; i < myList.childNodes.length; i++) {\r\n        if (myList.childNodes[i].childNodes[1].dataset.workerId === workerId) {\r\n            myList.removeChild(myList.childNodes[i]);\r\n        }\r\n    }\r\n    \r\n}"],"sourceRoot":""}